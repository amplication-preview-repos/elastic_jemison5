/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { CustomerUpdateManyWithoutStoresInput } from "./CustomerUpdateManyWithoutStoresInput";
import { Type } from "class-transformer";
import { DiscountUpdateManyWithoutStoresInput } from "./DiscountUpdateManyWithoutStoresInput";
import { EmployeeUpdateManyWithoutStoresInput } from "./EmployeeUpdateManyWithoutStoresInput";
import { OrderUpdateManyWithoutStoresInput } from "./OrderUpdateManyWithoutStoresInput";
import { PaymentTypeUpdateManyWithoutStoresInput } from "./PaymentTypeUpdateManyWithoutStoresInput";
import { ProductUpdateManyWithoutStoresInput } from "./ProductUpdateManyWithoutStoresInput";

@InputType()
class StoreUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessDescription?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessPhoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessSector?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currency?: string | null;

  @ApiProperty({
    required: false,
    type: () => CustomerUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => CustomerUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => CustomerUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  customers?: CustomerUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => DiscountUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => DiscountUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => DiscountUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  discounts?: DiscountUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  employees?: EmployeeUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logoUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => PaymentTypeUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => PaymentTypeUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => PaymentTypeUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  paymentTypes?: PaymentTypeUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  primaryAddress?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  products?: ProductUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string | null;
}

export { StoreUpdateInput as StoreUpdateInput };
