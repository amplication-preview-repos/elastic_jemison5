/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
  IsDate,
} from "class-validator";
import { OrderCreateNestedManyWithoutDiscountsInput } from "./OrderCreateNestedManyWithoutDiscountsInput";
import { Type } from "class-transformer";
import { StoreWhereUniqueInput } from "../../store/base/StoreWhereUniqueInput";
import { EnumDiscountTypeField } from "./EnumDiscountTypeField";

@InputType()
class DiscountCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxDiscountAmount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutDiscountsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutDiscountsInput;

  @ApiProperty({
    required: false,
    type: () => StoreWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoreWhereUniqueInput)
  @IsOptional()
  @Field(() => StoreWhereUniqueInput, {
    nullable: true,
  })
  store?: StoreWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumDiscountTypeField,
  })
  @IsEnum(EnumDiscountTypeField)
  @IsOptional()
  @Field(() => EnumDiscountTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  validFrom?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  validTo?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  value?: number | null;
}

export { DiscountCreateInput as DiscountCreateInput };
